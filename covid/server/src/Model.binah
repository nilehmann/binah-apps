import Data.ByteString (ByteString)

Invitation
  code Text
  emailAddress Text
  firstName Text
  lastName Text
  institution Text
  accepted Bool
  emailStatus String
  emailError String Maybe

  UniqueInvitationEmailAddress emailAddress

  insert {\invitation viewer ->
    not (invitationAccepted invitation)
    && IsOrganizer viewer
    && emailStatus invitation == "not_sent"
  }

  update [ accepted ] {\old new _ ->
    not (invitationAccepted old) && invitationAccepted new
  }

  update [ emailStatus ] {\_ new _ ->
     IsOrganizer viewer
     && (emailStatus new == "sent" || emailStatus new == "error")
  }

User
  emailAddress Text
  password ByteString
  photoURL Text Maybe
  firstName Text
  lastName Text
  displayName Text
  institution Text
  level String
  visibility String
  room RoomId Maybe

  UniqueUserEmailAddress emailAddress

  insert {\new viewer -> IsOrganizer viewer || userLevel new == "attendee"}

  read [ password ] @IsSelf
  read [ room ] {\user viewer ->
    userVisibility user == "public" || IsSelf user viewer
  }

  update [ password, level, emailAddress ] {\_ _ _ -> False}

  update [ photoURL, firstName, lastName, displayName, institution, room ] {\old _ viewer ->
    IsSelf old viewer
  }

Room
  color Text
  name Text
  topic Text
  zoomLink Text

  insert {\_ viewer -> IsOrganizer viewer}

  update [ name, capacity, zoomLink ] {\_ _ viewer -> IsOrganizer viewer}

policy IsSelf = \user viewer ->
  user == viewer

policy IsOrganizer = \user ->
  userLevel user == "organizer"
